<?xml version="1.0" encoding="UTF-8"?>
<conf:storage-configuration xmlns:persist="java://org.xillium.data.persistence" xmlns:conf="java://org.xillium.core.conf">

    <persist:object-mapped-query class="org.xillium.gear.util.Progressive$State">
    <?assemble name="RecallState"?>
        <![CDATA[
        SELECT PREVIOUS, STEP FROM PROGRESSIVE_STATES WHERE MODULE_ID = :moduleId:VARCHAR
        ]]>
    </persist:object-mapped-query>
  
    <persist:parametric-query>
    <?assemble name="RecallParam"?>
        <![CDATA[
        SELECT PARAM FROM PROGRESSIVE_STATES WHERE MODULE_ID = :moduleId:VARCHAR
        ]]>
    </persist:parametric-query>
  
    <persist:parametric-statement>
    <?assemble name="CommitState"?>
        <![CDATA[
        MERGE INTO PROGRESSIVE_STATES USING (VALUES(
            :moduleId:VARCHAR, :state:VARCHAR, :step:INTEGER, SUBSTR(COALESCE(:param:VARCHAR, ''), 1, 1024)
        )) AS V(I, S, P, M)
            ON PROGRESSIVE_STATES.MODULE_ID = V.I
        WHEN MATCHED THEN
            UPDATE SET STATE = NULL, PREVIOUS = V.S, STEP = V.P, PARAM = V.M
        WHEN NOT MATCHED THEN
            INSERT (MODULE_ID, PREVIOUS, STEP, PARAM) VALUES V.I, V.S, V.P, V.M
        ]]>
    </persist:parametric-statement>
  
    <persist:parametric-statement>
    <?assemble name="MarkAttempt"?>
        <![CDATA[
        MERGE INTO PROGRESSIVE_STATES USING (VALUES(
            :moduleId:VARCHAR, :state:VARCHAR||'/'||:step:INTEGER, SUBSTR(:param:VARCHAR, 1, 1024)
        )) AS V(I, S, M)
            ON PROGRESSIVE_STATES.MODULE_ID = V.I
        WHEN MATCHED THEN
            UPDATE SET STATE = V.S, PARAM = V.M
        WHEN NOT MATCHED THEN
            INSERT (MODULE_ID, STATE, PARAM) VALUES V.I, V.S, V.M
        ]]>
    </persist:parametric-statement>

    <!-- VALIDATIONS -->

    <persist:object-mapped-query class="org.xillium.gear.util.Progressive$State">
    <?assemble name="RecallFullInformation"?>
        <![CDATA[
        SELECT * FROM PROGRESSIVE_STATES WHERE MODULE_ID = :moduleId:VARCHAR
        ]]>
    </persist:object-mapped-query>

    <persist:object-mapped-query class="org.xillium.gear.util.Progressive$State">
    <?assemble name="ResetParam"?>
        <![CDATA[
        UPDATE PROGRESSIVE_STATES SET PARAM = NULL WHERE MODULE_ID = :moduleId:VARCHAR
        ]]>
    </persist:object-mapped-query>

</conf:storage-configuration>

